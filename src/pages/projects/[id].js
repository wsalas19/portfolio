import { NEXT_URL } from "@/config/config";
import { useWindowSize } from "@/hooks/useWindowSize";
import {
	Box,
	Button,
	Divider,
	Flex,
	HStack,
	IconButton,
	Image,
	Link,
	Tag,
	Text,
} from "@chakra-ui/react";
import Head from "next/head";
import NextLink from "next/link";
import { useRouter } from "next/router";
import React from "react";
import { BsGithub } from "react-icons/bs";
import { FiExternalLink } from "react-icons/fi";

export default function ProjectDetails({ project }) {
	const router = useRouter();
	const { id } = router.query;
	const { image, name, url, description, technologies, repo } = project;
	const { size: windowSize } = useWindowSize();
	const breakPoint = 1339;

	return (
		<>
			<Head>
				<title>Project {name}</title>
				<meta name='project details' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<Box p={4} h={"95svh"} bg={"#323232"} display={"flex"} flexDirection={"column"} gap={3}>
				<Flex w={"100%"} flexDirection={{ base: "column", lg: "row" }} gap={3}>
					<Flex
						w={{ base: "100%", lg: "50%" }}
						p={2}
						border={"solid 1px gray"}
						rounded={"md"}
						flexDirection={"column"}
						gap={2}
					>
						<Text fontWeight={"bold"} color={"white"}>{`Project ${name}`}</Text>
						<Divider />
						<Text color={"whiteAlpha.600"}>{description}</Text>
						<Flex flexDirection={"row"} gap={2} alignItems={"center"}>
							<Link href={repo} isexternal='true'>
								<Button size={"sm"} colorScheme={"blackAlpha"} leftIcon={<BsGithub />}>
									Github
								</Button>
							</Link>
							{url.includes(".app") ? (
								<Link
									display={"flex"}
									alignItems={"center"}
									gap={1}
									color={"#7E7E7E"}
									href={url}
									isexternal='true'
								>
									Visit <FiExternalLink />
								</Link>
							) : (
								<Text fontWeight={"bold"} color={"yellow.100"}>
									{url}
								</Text>
							)}
						</Flex>
					</Flex>
					<Flex
						w={{ base: "100%", lg: "50%" }}
						p={2}
						border={"1px solid grey"}
						borderRadius={"md"}
						h={"auto"}
						flexDirection={"column"}
					>
						<Text fontWeight={"bold"} color={"white"}>
							Technologies
						</Text>
						<Flex mt={2} wrap={"wrap"} gap={2}>
							{technologies.map((t) => {
								return (
									<Tag
										cursor={"pointer"}
										className='tech'
										key={Math.random().toString(36).substr(2)}
									>
										{t}
									</Tag>
								);
							})}
						</Flex>
					</Flex>
				</Flex>

				<Flex overflow={"hidden"} borderRadius={"md"} border={"1px solid grey"}>
					<Image
						objectFit={"fill"}
						placeSelf={"center"}
						src={image}
						alt='project preview'
						className='projectPreview'
					/>
				</Flex>
			</Box>
		</>
	);
}

export async function getServerSideProps({ params }) {
	const id = params.id;
	const response = await fetch(`${NEXT_URL}/projects/${id}`);

	const data = await response.json();

	return { props: { project: data } };
}
