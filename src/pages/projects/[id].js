import { NEXT_URL } from "@/config/config";
import {
	Box,
	Button,
	Divider,
	Flex,
	Grid,
	GridItem,
	Heading,
	HStack,
	Image,
	Link,
	Tag,
	Text,
	VStack,
} from "@chakra-ui/react";
import Head from "next/head";
import NextLink from "next/link";
import { useRouter } from "next/router";
import React from "react";
import { AiOutlineArrowLeft } from "react-icons/ai";
import { BsGithub } from "react-icons/bs";
import { FiExternalLink } from "react-icons/fi";

export default function ProjectDetails({ project }) {
	const router = useRouter();
	const { id } = router.query;
	const { image, name, url, description, technologies, repo } = project;

	return (
		<>
			<Head>
				<title>Project {name}</title>
				<meta name="project details" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Box
				className="detailLayout"
				p={"20px"}
				w={"100%"}
				h={"86%"}
				bg={"#323232"}
			>
				<Link className="backButton" as={NextLink} href={"/"}>
					<HStack p={6}>
						<AiOutlineArrowLeft color="white" />
						<Text color={"white"} fontWeight={"medium"}>
							go back
						</Text>
					</HStack>
				</Link>
				<Grid
					className="detailLayoutGrid"
					gridTemplateColumns="repeat(4,1fr)"
					gridTemplateRows="repeat(4,1fr)"
					gridTemplateAreas={
						'"img img img side" "img img img side" "img img img side" "tech tech tech side"'
					}
					rowGap={"5"}
					columnGap={"5"}
					w={"100%"}
					h={"90vh"}
					margin={"auto"}
				>
					<GridItem overflow={"hidden"} borderRadius={"6"} gridArea={"img"}>
						<Image objectFit={"contain"} src={image} alt="project preview" />
					</GridItem>
					<GridItem
						border={"1px solid grey"}
						p={6}
						borderRadius={"6"}
						gridArea={"side"}
						h={"auto"}
					>
						<Flex
							flexDirection={"column"}
							justifyContent={"flex-start"}
							gap={"5"}
						>
							<Heading color={"white"} size={"lg"}>
								{name}
							</Heading>
							<Divider />
							<Text color={"white"} size={"md"} fontWeight={"medium"}>
								{"Project Description"}
							</Text>
							<Text color={"white"}>{description}</Text>

							<Flex flexDirection={"row"} justifyContent={"space-between"}>
								{url.includes(".app") ? (
									<Link
										display={"flex"}
										alignItems={"center"}
										gap={1}
										color={"#7E7E7E"}
										href={url}
										isexternal="true"
									>
										Visit <FiExternalLink />
									</Link>
								) : (
									<Tag w={"fit-content"} colorScheme={"yellow"}>
										{url}
									</Tag>
								)}
								<Link href={repo} isexternal="true">
									<Button colorScheme={"blackAlpha"} leftIcon={<BsGithub />}>
										Github
									</Button>
								</Link>
							</Flex>
						</Flex>
					</GridItem>
					<GridItem
						p={5}
						border={"1px solid grey"}
						borderRadius={"6"}
						gridArea={"tech"}
						h={"auto"}
					>
						<Text fontWeight={"medium"} color={"white"}>
							Technologies used:
						</Text>
						<HStack mt={3} spacing={2}>
							{technologies.map((t) => {
								return (
									<Tag
										className="tech"
										key={Math.random().toString(36).substr(2)}
									>
										{t}
									</Tag>
								);
							})}
						</HStack>
					</GridItem>
				</Grid>
			</Box>
		</>
	);
}

export async function getServerSideProps({ params }) {
	const id = params.id;
	const response = await fetch(`${NEXT_URL}/projects/${id}`);

	const data = await response.json();

	return { props: { project: data } };
}
